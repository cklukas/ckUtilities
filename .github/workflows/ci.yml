name: CI

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  build-and-test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            ninja-build \
            python3 \
            libncurses-dev \
            libncursesw6 \
            libtinfo-dev \
            libgpm-dev \
            pkg-config \
            libcurl4-openssl-dev
          multiarch=$(gcc -print-multiarch)
          echo "LIBRARY_PATH=/usr/lib/$multiarch" >> "$GITHUB_ENV"
          echo "CMAKE_LIBRARY_PATH=/usr/lib/$multiarch" >> "$GITHUB_ENV"
          echo "CPATH=/usr/include/$multiarch" >> "$GITHUB_ENV"
          echo "CMAKE_INCLUDE_PATH=/usr/include/$multiarch" >> "$GITHUB_ENV"
          echo "PKG_CONFIG_PATH=/usr/lib/$multiarch/pkgconfig" >> "$GITHUB_ENV"

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update --quiet
          brew install --quiet ninja ncurses curl
          NCURSES_PREFIX=$(brew --prefix ncurses)
          echo "CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH:+$CMAKE_PREFIX_PATH:}$NCURSES_PREFIX" >> "$GITHUB_ENV"
          echo "CPATH=${CPATH:+$CPATH:}$NCURSES_PREFIX/include" >> "$GITHUB_ENV"
          echo "LIBRARY_PATH=${LIBRARY_PATH:+$LIBRARY_PATH:}$NCURSES_PREFIX/lib" >> "$GITHUB_ENV"
          CURL_PREFIX=$(brew --prefix curl)
          echo "PKG_CONFIG_PATH=${PKG_CONFIG_PATH:+$PKG_CONFIG_PATH:}$CURL_PREFIX/lib/pkgconfig" >> "$GITHUB_ENV"
          echo "CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH:+$CMAKE_PREFIX_PATH:}$CURL_PREFIX" >> "$GITHUB_ENV"
          echo "CPATH=${CPATH:+$CPATH:}$CURL_PREFIX/include" >> "$GITHUB_ENV"
          echo "LIBRARY_PATH=${LIBRARY_PATH:+$LIBRARY_PATH:}$CURL_PREFIX/lib" >> "$GITHUB_ENV"

      - name: Configure
        run: cmake --preset dev

      - name: Apply repository patches
        run: scripts/apply_patches.sh

      - name: Build all targets
        run: cmake --build build/dev

      - name: Run tests
        run: ctest --test-dir build/dev --output-on-failure

  package-linux:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install packaging dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            ninja-build \
            python3 \
            libncurses-dev \
            libncursesw6 \
            libtinfo-dev \
            libgpm-dev \
            pkg-config \
            libcurl4-openssl-dev \
            rpm
          multiarch=$(gcc -print-multiarch)
          echo "LIBRARY_PATH=/usr/lib/$multiarch" >> "$GITHUB_ENV"
          echo "CMAKE_LIBRARY_PATH=/usr/lib/$multiarch" >> "$GITHUB_ENV"
          echo "CPATH=/usr/include/$multiarch" >> "$GITHUB_ENV"
          echo "CMAKE_INCLUDE_PATH=/usr/include/$multiarch" >> "$GITHUB_ENV"
          echo "PKG_CONFIG_PATH=/usr/lib/$multiarch/pkgconfig" >> "$GITHUB_ENV"

      - name: Configure
        run: cmake --preset pkg

      - name: Apply repository patches
        run: scripts/apply_patches.sh

      - name: Build packages
        run: cmake --build build/pkg -t package

      - name: List packages
        run: ls -R1 build/pkg

      - name: Upload Linux packages
        uses: actions/upload-artifact@v4
        with:
          name: ck-utilities-linux-packages
          path: |
            build/pkg/*.deb
            build/pkg/*.rpm
            build/pkg/*.tar.gz

  package-macos:
    runs-on: macos-latest
    needs: build-and-test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install packaging dependencies
        run: |
          brew update
          brew install ninja ncurses curl
          NCURSES_PREFIX=$(brew --prefix ncurses)
          echo "CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH:+$CMAKE_PREFIX_PATH:}$NCURSES_PREFIX" >> "$GITHUB_ENV"
          echo "CPATH=${CPATH:+$CPATH:}$NCURSES_PREFIX/include" >> "$GITHUB_ENV"
          echo "LIBRARY_PATH=${LIBRARY_PATH:+$LIBRARY_PATH:}$NCURSES_PREFIX/lib" >> "$GITHUB_ENV"
          CURL_PREFIX=$(brew --prefix curl)
          echo "PKG_CONFIG_PATH=${PKG_CONFIG_PATH:+$PKG_CONFIG_PATH:}$CURL_PREFIX/lib/pkgconfig" >> "$GITHUB_ENV"
          echo "CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH:+$CMAKE_PREFIX_PATH:}$CURL_PREFIX" >> "$GITHUB_ENV"
          echo "CPATH=${CPATH:+$CPATH:}$CURL_PREFIX/include" >> "$GITHUB_ENV"
          echo "LIBRARY_PATH=${LIBRARY_PATH:+$LIBRARY_PATH:}$CURL_PREFIX/lib" >> "$GITHUB_ENV"

      - name: Configure
        run: cmake --preset pkg -DCMAKE_INSTALL_PREFIX=.

      - name: Apply repository patches
        run: scripts/apply_patches.sh

      - name: Build macOS archive
        run: cmake --build build/pkg -t package

      - name: List macOS package
        run: ls -R1 build/pkg

      - name: Upload macOS archive
        uses: actions/upload-artifact@v4
        with:
          name: ck-utilities-macos-archive
          path: build/pkg/*.tar.gz
